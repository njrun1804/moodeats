name: MoodEats CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Cancel in-progress runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Quick validation - fail fast
  validate:
    runs-on: ubuntu-latest
    name: ⚡ Quick Checks
    steps:
    - uses: actions/checkout@v3

    - name: Validate JSON
      run: |
        echo "🔍 Validating JSON..."
        python3 -m json.tool meals.json > /dev/null
        python3 -m json.tool package.json > /dev/null
        echo "✅ All JSON files valid"

    - name: Check file sizes
      run: |
        echo "📏 Checking HTML sizes..."
        for file in *.html; do
          [ -f "$file" ] || continue
          size=$(wc -c < "$file")
          echo "  $file: $(($size/1024))KB"
          [ $size -gt 500000 ] && exit 1
        done
        echo "✅ All files within limits"

  # Unit tests
  test-unit:
    runs-on: ubuntu-latest
    name: 🧪 Unit Tests
    needs: validate
    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-

    - run: npm ci --prefer-offline --no-audit

    - name: Run tests with coverage
      run: |
        npm run test:unit -- --coverage --silent
        echo ""
        echo "📊 Coverage Summary:"
        npx jest --coverage --coverageReporters=text-summary --silent 2>&1 | tail -n 10

    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: coverage
        path: coverage/
        retention-days: 3

  # E2E tests - parallel execution
  test-e2e:
    runs-on: ubuntu-latest
    name: 🌐 E2E Tests (${{ matrix.browser }})
    needs: validate
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox]
    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Cache Playwright
      uses: actions/cache@v3
      with:
        path: ~/.cache/ms-playwright
        key: playwright-${{ matrix.browser }}-${{ hashFiles('package-lock.json') }}

    - run: npm ci --prefer-offline --no-audit
    - run: npx playwright install ${{ matrix.browser }} --with-deps

    - name: Run ${{ matrix.browser }} tests
      run: npx playwright test --project=${{ matrix.browser }} --reporter=dot

    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: test-results-${{ matrix.browser }}
        path: test-results/
        retention-days: 3

  # Deploy to GitHub Pages
  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    name: 🚀 Deploy
    needs: [test-unit, test-e2e]
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - uses: actions/checkout@v3

    - name: Optimize for production
      run: |
        echo "🗜️ Optimizing..."
        # Remove comments from HTML
        for f in *.html; do
          [ -f "$f" ] && sed -i 's/<!--.*-->//g' "$f"
        done
        echo "✅ Optimized"

    - uses: actions/configure-pages@v3
    - uses: actions/upload-pages-artifact@v2
      with:
        path: '.'
    - id: deployment
      uses: actions/deploy-pages@v2

    - name: Verify deployment
      run: |
        sleep 10
        curl -f https://njrun1804.github.io/moodeats/ || exit 1
        echo "✅ Site is live!"

  # Summary
  summary:
    if: always()
    runs-on: ubuntu-latest
    name: 📊 Summary
    needs: [validate, test-unit, test-e2e, deploy]
    steps:
    - name: Pipeline Summary
      run: |
        echo "## 🎯 MoodEats Pipeline Results"
        echo ""
        echo "### Tests"
        echo "- Validation: ${{ needs.validate.result }}"
        echo "- Unit Tests: ${{ needs.test-unit.result }}"
        echo "- E2E Tests: ${{ needs.test-e2e.result }}"
        echo ""
        if [[ "${{ needs.deploy.result }}" == "success" ]]; then
          echo "### ✅ Deployed"
          echo "🔗 https://njrun1804.github.io/moodeats/"
        fi