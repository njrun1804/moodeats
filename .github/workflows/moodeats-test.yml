name: Test MoodEats

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    name: 🧪 Unit Tests

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd moodeats
        npm ci

    - name: Run Jest unit tests
      run: |
        cd moodeats
        npm run test:unit

    - name: Generate coverage report
      run: |
        cd moodeats
        npm run test:coverage

    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: coverage-report
        path: moodeats/coverage/

  e2e-tests:
    runs-on: ubuntu-latest
    name: 🌐 E2E Tests
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd moodeats
        npm ci

    - name: Install Playwright browsers
      run: |
        cd moodeats
        npx playwright install --with-deps ${{ matrix.browser }}

    - name: Run Playwright tests on ${{ matrix.browser }}
      run: |
        cd moodeats
        npx playwright test --project=${{ matrix.browser }}

    - name: Upload Playwright report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: moodeats/playwright-report/
        retention-days: 30

  mobile-tests:
    runs-on: ubuntu-latest
    name: 📱 Mobile Tests

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd moodeats
        npm ci

    - name: Install Playwright browsers
      run: |
        cd moodeats
        npx playwright install --with-deps chromium webkit

    - name: Run mobile tests
      run: |
        cd moodeats
        npx playwright test --project="Mobile Chrome"
        npx playwright test --project="Mobile Safari"

    - name: Upload mobile test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: mobile-test-results
        path: moodeats/test-results/

  lint:
    runs-on: ubuntu-latest
    name: 🔍 Code Quality

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd moodeats
        npm ci

    - name: Run ESLint
      run: |
        cd moodeats
        npm run lint || true  # Don't fail on lint errors for now

    - name: Check JSON validity
      run: |
        cd moodeats
        echo "Validating meals.json..."
        python3 -m json.tool meals.json > /dev/null
        echo "✅ meals.json is valid JSON"

  test-summary:
    runs-on: ubuntu-latest
    name: ✅ All Tests Summary
    needs: [unit-tests, e2e-tests, mobile-tests, lint]
    if: always()

    steps:
    - name: Check test results
      run: |
        echo "✅ Test Suite Complete!"
        echo ""
        echo "Test Matrix:"
        echo "  • Unit Tests: ${{ needs.unit-tests.result }}"
        echo "  • E2E Tests: ${{ needs.e2e-tests.result }}"
        echo "  • Mobile Tests: ${{ needs.mobile-tests.result }}"
        echo "  • Code Quality: ${{ needs.lint.result }}"

        if [[ "${{ needs.unit-tests.result }}" == "failure" ]] || \
           [[ "${{ needs.e2e-tests.result }}" == "failure" ]] || \
           [[ "${{ needs.mobile-tests.result }}" == "failure" ]]; then
          echo ""
          echo "❌ Some tests failed. Please check the logs above."
          exit 1
        else
          echo ""
          echo "🎉 All tests passed successfully!"
        fi